% Define parameters
M = 16;
num_symbol = 1000;

% Generate random data
data = randi([0 M-1], num_symbol, 1);

% Perform PSK modulation
txSig = pskmod(data, M, pi/M);

% Plot transmitted signal constellation
scatterplot(txSig);
title('PSK Scatter Plot');

% Add noise to the transmitted signal
rxSig = awgn(txSig, 20);

% Plot received signal constellation with noise
scatterplot(rxSig);
title('Noisy PSK Scatter Plot');

% Initialize SNR and BER arrays
snr = [];
BER_sim = [];
ber_theoretical = [];

% Loop through SNR values
for i = 1:1:50
    snr(i) = i;
    EbNo = 10^(i/10);

    % Add noise based on current Eb/No
    rxSig = awgn(txSig, snr(i));
    
    % Calculate simulated BER
    [numErrors, ber_simulated] = biterr(data, pskdemod(rxSig, M, pi/M));
    BER_sim(i) = ber_simulated;

    % Calculate theoretical BER
    ber_theoretical(i) = erfc(sqrt(EbNo * (sin(pi/M))^2));
end

% Plot simulated and theoretical BER
figure;
plot(snr, BER_sim, '-o');
hold on;
plot(snr, ber_theoretical, '-x');
xlabel('SNR (dB)');
ylabel('Bit Error Rate (BER)');
legend('Simulated BER', 'Theoretical BER');
title('BER vs SNR for M-ary PSK');
grid on;